#include <windows.h> 

#ifdef __cplusplus
extern "C"{
#endif

/*-------------------------------------------------------------------------------------------
|
|					   一. 读卡器及CPU卡读写接口函数
|   推荐的函数调用顺序 
|
|   Up_open      打开设备获得设备句柄      
|   Up_ICC_reset    对IC卡复位
|   ...
|   Up_ICC_TransmitAPDU函数对IC卡进行操作
|   ...
|   Up_close     关闭打开设备的连接
|		
--------------------------------------------------------------------------------------------*/
 
/*-------------------------------------------------------------------------------------------
|
| 1. 打开IC卡终端端口
|     入口参数:
|       (A) 串行口读卡器  
|           name:  可取COM1 COM2 COM3 COM4等,字母大小写无关(以下name也一样)
|		    param1:  串口读卡器为波特率,可为9600、57600等
|           param2:  串口读卡器为奇偶校验,可为
|		             "O" 奇校验,"E" 偶校验, "N" 无校验
|                    无特殊要求,一般使用0即可!
|
|       (B) USB读卡器
|           银联读卡器接口不支持USB
|
|
|	返回值: INVALID_HANDLE_VALUE(-1) 表示打开端口失败;
|		    其他值(大于0)为打开的端口句柄,用于卡操作函数的fd
|
|
--------------------------------------------------------------------------------------------*/
HANDLE WINAPI UP_open(
	char          *name,
	unsigned int   param1,
	unsigned char  param2
	); 

/*------------------------------------------------------------------------------------
|
| 2. 关闭与IC卡读写器相连的端口(必需用CT_open打开的端口                                       
|    入口参数: 
|         fd为函数CT_open所返回的句柄
|    返回值: 
|         -1为失败  0 成功.
|
--------------------------------------------------------------------------------------*/
int WINAPI UP_close(HANDLE fd);  


/*------------------------------------------------------------------------
|  
|  4. 从外设向CPU卡发送命令APDU并接收应答APDU(银联接口专用)
|	  comm的结构: CLA INS P1 P2 Lc DATA [Le]  其中DATA长度为Lc字节
|	  resp的结构: DATA                        其中DATA长度为Le字节                               
|	  参数:
|	       fd:   已打开的端口描述符.
|          len:  命令comm的长度
|          comm: 发向卡上的命令
|          lenr: 从卡上接收到的数据长度
|          resp: 从卡上接收到的数据
|     返回值: 
|          0:通讯成功,具体返回状态请参考返回数据的前两个字节
			非0:错误
|
|     说明: 
|         该函数适用于在CRW-X银联读卡器读写T=0的支持511字节读,511字节写的CPU卡,
|         或其他大于255字节的卡读写操作 
|         使用该函数一次可读写多达511个字节的数据
--------------------------------------------------------------------------*/
UINT WINAPI UP_Transmit(
   HANDLE   hDev,
   WORD    len,
   PBYTE    comm,
   PWORD   lenr,
   PBYTE    resp
   );


#ifdef __cplusplus
}
#endif